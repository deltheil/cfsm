20071118
 - (djm) Remove support for non-event-based FSMs
 - (djm) Make FSM struct public, so no need for ugly allocation/deallocation
   dance
 - (djm) Rework regress tests to be event-based

20070707
 - (djm) Adapt to mtemplate API change

20070705
 - (djm) Clean up generated files in clean: target
 - (djm) Insert copyright year in all notices

20070417
 - (djm) Adapt to libxobject's API change
 - (djm) Adapt to renaming of libxobject+libxtemplate to libmtemplate
 - (djm) Rename template files *.x -> *.m. The rename has been performed as
   a local deletion for the old names, but a repository-side copy so as to
   preserve history

20070416
 - (djm) Add a "manual mode" where the user can specify their own template
 - (djm) More spacing fixes for source template
 - (djm) Add an option to specify the path to the templates and use it to
   make the regress tests work pre-install
 - (djm) Adapt to xtemplate's API change

20070415
 - (djm) Flesh out C implementation some more, fix some parser and
   template bugs. Now at the point where it will generate output, but
   that output is still incomplete and buggy.
 - (djm) Lots of work on the C source template, still incomplete but much
   closer now
 - (djm) Bugfix and spacing tweaks for the header
 - (djm) Fix callback/precondition argument generation. Code generated by
   the C version of cfsm looks complete and correct now! (untested though)
 - (djm) Detect attempts to use next-state in event-driven FSMs
 - (djm) Make the output file handling more yacc-like: output only a C source
   file by default, but include an option to output a header or a dot file
 - (djm) Fix more bugs in cfsm.c relating to output name handling
 - (djm) Fix more bugs in the templates and default function names
 - (djm) Adjust the regress tests to use the new default function names
 - (djm) The C-based cfsm is now fully functional and passes all regress
   tests. Remove the old Python implementation (it is still in the CVS attic)
 - (djm) Add graphviz template

20070408
 - (djm) Extract C source and header from cfsm and factor it into templates

20070407
 - (djm) Begin reimplementation of cfsm in C, starting with a lexer/parser
   and skeleton main executable.

20070326
 - (djm) Return a meaningful error code "CFSM_ERR_*" rather than -1 for
   everything
 - (djm) RCS Ids in everything
 - (djm) Implement ignored events

20070324
 - (djm) Implement event-driven FSMs
 - (djm) Remove the ctx settor functions in favour of passing in a ctx
   to the state advance function. Quite a bit simpler and matches what most
   apps do better.

20070311
 - (djm) Parametise location of cfsm program for regression tests
 - (djm) Some cleanup ahead of parser extension: make a fsm.new_state
   static factory to create new State objects pre-bound to the fsm
   (removes some ugly code). Extend parser table a little so we can accept
   new statful keywords

20070208
 - (djm) Mutable function signatures for the transition and precondition
   callbacks. You can now specify zero or more of: current_state, new_state,
   (void *)ctx. Also add ctx settor functions that are emitted if a ctx is
   included in a callback's signature
 - (djm) Add a regress test that exercises the example.fsm file in the top
   level directory. If I ship an example, it had better work!

20070208
 - (djm) Generalised the generated code: a FSM is now an opaque structure
   rather than having only one per generated source file
 - (djm) Add a regress test for the multiple initial-state case
 - (djm) (Mostly) templatise the emitted C code
 - (djm) Add a more extensive regression test and fix the bugs it uncovered

20070207
 - (djm) Initial import of cfsm

$Id: ChangeLog,v 1.30 2007/11/18 09:51:19 djm Exp $
