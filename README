Finite state machine compiler

This program compiles a high-level textual description of a finite state
machine into a C source file, header and/or a graphviz dot file. It
requires all state transitions to be explicitly labelled and will
disallow transitions that aren't permitted. It also supports "precondition"
functions that are required to succeed before a state transition is allowed
to occur and "transition functions" that are called upon transitions. Both
the preconditions and transition functions are per-state, and can be defined
to fire at state entry or exit

A reasonably well documented example state machine that shows off the
currently supported directives is included as "example.fsm" in this
directory.  The following command line will compile it to generate a C
source and header as well as a graph in "dot" format:

./cfsm.py -C example.c -H example.h -D example.dot example.fsm 

The FSM is very self-contained; just six functions, an opaque struct and
an enum (you get to pick their names). They are reasonably self-documenting
too - please have a look at the comments in the generated header file for
API usage.

Damien Miller <djm@mindrot.org> 2007-02-07
